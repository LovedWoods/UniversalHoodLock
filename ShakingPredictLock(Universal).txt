local Keybind = "t"
local EnableKey = "y"
local UpdateDelay = 0.1
local Offset = 0.15;
local HeldMode = true

local Ping = (game.Players.LocalPlayer:GetNetworkPing()*1000)
local Predict = ((Offset*1.5/1)/Ping)
local RS = game:GetService("RunService")
local Player =  game.Players.LocalPlayer
local Mouse = Player:GetMouse()
local Target = nil
local Camera = workspace.Camera
local Toggled = false
local Enabled = true
local Cooldown = false
local TS = game:GetService("TweenService")
local function Noti(Text)
	local Sound = Instance.new("Sound")
	Sound.SoundId = "rbxassetid://8486683243"
	Sound.Parent = game.Players.LocalPlayer.PlayerGui
	Sound:Play()
	game:GetService("StarterGui"):SetCore("SendNotification",{
		Title = "Notification";
		Text = Text;
	})
end

local function UpdateAllHitbox()
	for i,v in pairs(game.Players:GetPlayers()) do
		if not v.Character:FindFirstChild("Hitbox") then
			if v.Character.Name ~= game.Players.LocalPlayer.Character.Name then
				local hb = Instance.new("Part")
				hb.Name = "Hitbox"
				hb.CFrame = v.Character:FindFirstChild("HumanoidRootPart").CFrame
				hb.Transparency = 1
				hb.CanCollide = false
				hb.Anchored = false
				hb.Size = Vector3.new(4,4,4)
				hb.Parent = v.Character
			else
				v.Character:FindFirstChild("Hitbox").CFrame = v.Character:FindFirstChild("HumanoidRootPart").CFrame
			end
		end
	end
end

Noti("Aimlock Loaded Version 1 ðŸ˜œ\nMade by lovedwoods on discord")
game:GetService("UserInputService").InputBegan:Connect(function(key,gpe)
	if gpe then return end
	if key.KeyCode == Enum.KeyCode[string.upper(Keybind)] then
		if Toggled == false then
			if HeldMode == false then
				Toggled = true
				Target = game.Players:GetPlayerFromCharacter(Mouse.Target.Parent)
				Noti("Locked Onto "..Target.Name)
			end
		elseif Toggled == true then
			if HeldMode == false then
				Toggled = false
				Target = nil
				Noti("Unlocked")
			end
		end
		task.wait(0.25)
	elseif key.KeyCode == Enum.KeyCode[string.upper(EnableKey)] then
		if Enabled == false then
			Enabled = true
			Noti("Enabled Aimlock")
		elseif Enabled == true then
			Enabled = false
			Noti("Disabled Aimlock")
		end
	end
end)

game:GetService("UserInputService").InputChanged:Connect(function(key,gpe)
	if HeldMode == true then
		if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode[string.upper(Keybind)]) then
			if Enabled == true then
				if Target == nil then
					if Mouse.Target.Parent.Humanoid and Toggled == false then 
						if Cooldown == false then
							Target = game.Players:GetPlayerFromCharacter(Mouse.Target.Parent)
							Toggled = true
							Noti("Tracking "..Target.Name)
							Cooldown = true 
							task.wait(0.5)
							Cooldown = false
						end
					end
				elseif Target ~= nil then
					if Toggled == true then
						if Cooldown == false then
							Target = nil
							Toggled = false
							Noti("Disabled Tracking")
							Cooldown = true 
							task.wait(1)
							Cooldown = false
						end
					end
				end
			end
		end
	end
end)

RS.RenderStepped:Connect(function(delta)
	print("Updating Lock")
	local YPredict = math.random(-2,2.5)
	if Target ~= nil then
		if Enabled == true then
			local Humanoid = Target.Character.Humanoid
			local random = math.random(2,4)
			if random == 2 or random == 3 or random == 4 then
				if Humanoid.MoveDirection.X > 0 then
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position + Humanoid.MoveDirection)+Vector3.new((Predict*0.25)+0.5,0,0.2))
				elseif Humanoid.MoveDirection.X < 0 then
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position + Humanoid.MoveDirection)+Vector3.new(0.2,0,(Predict*0.25)+0.5))
				else
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position+Humanoid.MoveDirection)+Vector3.new(0,0,0))
				end
			else
				if Humanoid.MoveDirection.X > 0 then
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position + Humanoid.MoveDirection)+Vector3.new((Predict*0.25)+0.5,YPredict,0.2))
				elseif Humanoid.MoveDirection.X < 0 then
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position + Humanoid.MoveDirection)+Vector3.new(0.2,YPredict,(Predict*0.25)+0.5))
				else
					Camera.CFrame = CFrame.new(Camera.CFrame.Position,(Target.Character.HumanoidRootPart.Position+Humanoid.MoveDirection)+Vector3.new(0,YPredict,0))
				end
			end
		end
	end
end)

RS.RenderStepped:Connect(function(delta)
UpdateAllHitbox()
end)
